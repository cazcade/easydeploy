#!/bin/bash
set -e
#Defaults
export LB_HTTP_CHECK_URL="/"
export LB_RATELIMIT_AFTER=1024
export LB_MAXCONN=1024
export LB_MAXCONN_PER=256
export LB_CHECK_INTERVAL=5000
export LB_TIMEOUT=10s
export LB_STATS_PASSWORD=password
export LB_TARGET_COMPONENT=
export COMPONENT_MODIFIER=
export MIN_INSTANCES=0
export MAX_INSTANCES=10000000


DIR=$(pwd)
cd $(dirname $0) > /dev/null
usage()
{
cat << EOF
usage: $0 options

Main easy deploy command

OPTIONS:
   -h      Show this message
   -b      Git branch to use (overrides GIT_BRANCH in a profile file)
   -e      Environment to deploy to (overrides DEPLOY_ENV in a profile file)
   -p      Deployment profile file


Sub commands

deploy <ip-address>
create
scale
remote-tail
rebuild
upgrade

EOF
}



e=
branch=
while getopts "he:p:b:" OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         e)
             e=$OPTARG
             ;;
         b)
             branch=$OPTARG
             ;;
         p)
             profile="$OPTARG"
             cd $DIR > /dev/null
             source ${profile}
             cd - > /dev/null
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

if [ ! -z "$e" ]
then
    export DEPLOY_ENV="$e"
fi


if [ -z "$profile" ]
then
    echo "Please specify the deployment profile to use, this is normally a file ending in .profile"
     exit 1
fi

if [ -z "$GIT_BRANCH" ]
then
    if [ ! -z "$branch" ]
    then
        export GIT_BRANCH=${branch}
    elif [ ${DEPLOY_ENV} == "prod" ] ||  [ ${DEPLOY_ENV} == "alt-prod" ]
    then
         export GIT_BRANCH=master
    else
         echo "Using ${DEPLOY_ENV} branch"
         export GIT_BRANCH=${DEPLOY_ENV}
    fi
fi

shift $((OPTIND-1))
command=$1
shift

case $command in
     help)
         usage
         exit 1
         ;;
     image)
         ../commands/image.sh $@
         ;;
     deploy)
         ../commands/deploy.sh $@
         ;;
     create)
         ../commands/deploy-and-provision.sh $@
         ;;
     rebuild)
         ../commands/rebuild-machines.sh $@
         ;;
     upgrade)
         ../commands/upgrade-machines.sh $@
         ;;
     update)
         ../commands/update.sh $@
         ;;
     update-lb)
         ../commands/update-lb.sh $@
         ;;
     tail)
         ../commands/remote-tail.sh $@
         ;;
     scale)
         ../commands/scale.sh $@
         ;;
     list)
         ../commands/list.sh $@
         ;;
     wire)
         ../commands/wire.sh $@
         ;;
     *)
        usage;
        exit 1
         ;;
 esac


